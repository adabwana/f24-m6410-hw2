
---
format:
  html: {toc: true, toc-depth: 3, theme: cosmo, number-sections: false, output-file: assignments.hw2.q9_10.html}
fontsize: 0.9em
code-block-background: true
include-in-header: {text: '<link rel = "icon" href = "data:," />'}
toc-title-numbers: false
number-depth: 0

---
<style></style><style>.printedClojure .sourceCode {
  background-color: transparent;
  border-style: none;
}
</style><style>.clay-limit-image-width .clay-image {max-width: 100%}
.clay-side-by-side .sourceCode {margin: 0}
.clay-side-by-side {margin: 1em 0}
</style>
<script src="assignments.hw2.q9_10_files/md-default1.js" type="text/javascript"></script><script src="assignments.hw2.q9_10_files/md-default2.js" type="text/javascript"></script><script src="assignments.hw2.q9_10_files/katex3.js" type="text/javascript"></script><script src="assignments.hw2.q9_10_files/vega4.js" type="text/javascript"></script><script src="assignments.hw2.q9_10_files/vega5.js" type="text/javascript"></script><script src="assignments.hw2.q9_10_files/vega6.js" type="text/javascript"></script><link href="https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/katex.min.css" rel="stylesheet" type="text/css" />

::: {.sourceClojure}
```clojure
(ns assignments.hw2.q9-10
  (:require
    [assignments.hw2.utils :refer :all]
    [scicloj.hanamicloth.v1.api :as haclo]
    [tablecloth.api :as tc]))
```
:::


## Question 9 to 10
---

## Question 9
---

#### *9) Events $A1$ and $A2$ are such that $A1 ∪ A2 = S$ (the sample space), and $A1 ∩ A2 = ∅$ (the empty set). Find $p1$ if $P(A1) = p1$ , $P(A2) = p2$, and $3p_1 − p_2 = 0.5$.*

**Given:**

$$A1 ∪ A2 = S$$

$$A1 ∩ A2 = ∅$$

$$P(A1) = p1$$

$$P(A2) = p_2$$

$$3p_1 − p_2 = 0.5$$

**Steps:**

1. Since A1 and A2 are mutually exclusive and cover the entire sample space:

$$P(A1) + P(A2) = 1$$

$$p_1 + p_2 = 1$$

2. We now have a system of two equations:

$$p_1 + p_2 = 1$$

$$3p_1 - p_2 = 0.5$$

3. We can solve this system using linear algebra:

$$A = \begin{bmatrix} 1 & 1 \\ 3 & -1 \end{bmatrix}$$

$$x = \begin{bmatrix} p1 \\ p2 \end{bmatrix}$$

$$b = \begin{bmatrix} 1 \\ 0.5 \end{bmatrix}$$

We'll solve this using LU decomposition and forward/backward substitution. Similar to Question 1:


::: {.sourceClojure}
```clojure
(comment
  (defn solve-probabilities [b1 b2]
    (let [A (dge 2 2 [1 1
                      3 -1]
                 {:layout :row})
          b (dv [b1 b2])
          LU (trf! A)
          x (mv (tri! LU) b)]
      x)))
```
:::



::: {.sourceClojure}
```clojure
(let [solution (solve-probabilities 1 0.5)
      p1 (first solution)
      p2 (second solution)]
  (str [(str "p1 = " p1)
        (str "p2 = " p2)]))
```
:::



::: {.printedClojure}
```clojure
"[\"p1 = 0.375\" \"p2 = 0.625\"]"

```
:::


**Answer:**


::: {.sourceClojure}
```clojure
(let [solution (solve-probabilities 1 0.5)
      p1 (first solution)]
  (answer (str "p1 = " p1)))
```
:::


> <span style="color: black; font-size: 1.5em;">**p1 = 0.375**</span>

**Verification:**
 
 Let's verify our solution satisfies both equations:


::: {.sourceClojure}
```clojure
(let [solution (solve-probabilities 1 0.5)
      p1 (first solution)
      p2 (second solution)]
  (answer (str "p1 + p2 = " (+ p1 p2)
               ",   \n"
               "3p1 - p2 = " (- (* 3 p1) p2))))
```
:::


> <span style="color: black; font-size: 1.5em;">**p1 + p2 = 1.0,   
3p1 - p2 = 0.5**</span>

**Interpretation:**
1. $p_1$ represents the probability of event $A1$ occurring.
2. $p_2$ represents the probability of event $A2$ occurring.
3. The sum of $p_1$ and $p_2$ equals 1, confirming that $A1$ and $A2$ cover the entire sample space.
4. The equation $3p_1 - p_2 = 0.5$ is satisfied by our solution.

**Conclusion:**
We have successfully found $p_1$, which satisfies all the given conditions. This solution demonstrates how mutually exclusive events that cover the entire sample space relate to each other probabilistically.

## Question 10
---

#### *10) Suppose that two fair dice are tossed. What is the probability that the sum equals ten given that it exceeds eight?*

**Given:**
     
 - Two fair dice are tossed
 - We need to find $P(Sum = 10 | Sum > 8)$

**Steps:**

**1. Sample space for sums exceeding 8:**


::: {.sourceClojure}
```clojure
(def sums-exceeding-8 [9 10 11 12])
```
:::


**2. Count the number of ways to get each sum:**


::: {.sourceClojure}
```clojure
(defn count-ways [sum]
  (count (for [d1 (range 1 7)
               d2 (range 1 7)
               :when (= (+ d1 d2) sum)]
           [d1 d2])))
```
:::



::: {.sourceClojure}
```clojure
(let [sums (range 2 13)
      frequencies (map count-ways sums)
      data (tc/dataset {:sum       sums
                        :frequency frequencies})]
  (haclo/layer-bar data
                   {:=x :sum :=x-title "Sum of Dice" :=mark-size 25
                    :=y :frequency :=y-title "Frequency"}))
```
:::



```{=html}
<div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"x":{"field":"x","type":"nominal"},"y":{"field":"y","type":"nominal"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"width":400,"background":"floralwhite","layer":[{"mark":{"type":"bar","size":25,"tooltip":true},"encoding":{"x":{"field":"sum","type":"quantitative","title":"Sum of Dice"},"y":{"field":"frequency","type":"quantitative","title":"Frequency"}},"data":{"values":"sum,frequency\n2,1\n3,2\n4,3\n5,4\n6,5\n7,6\n8,5\n9,4\n10,3\n11,2\n12,1\n","format":{"type":"csv"}}}],"height":300,"data":{"url":"assignments.hw2.q9_10_files\/0.csv","format":{"type":"csv"}}});</script></div>
```



::: {.sourceClojure}
```clojure
(def ways-for-sums
  (map #(vector % (count-ways %)) sums-exceeding-8))
```
:::


Number of ways for each sum:


::: {.sourceClojure}
```clojure
(into [] (map (fn [[sum ways]]
                {:sum sum :ways ways}) ways-for-sums))
```
:::



::: {.printedClojure}
```clojure
[{:sum 9, :ways 4}
 {:sum 10, :ways 3}
 {:sum 11, :ways 2}
 {:sum 12, :ways 1}]

```
:::


**3. Calculate the probability of sum exceeding 8:**


::: {.sourceClojure}
```clojure
(def total-ways-exceeding-8 (reduce + (map second ways-for-sums)))
```
:::



::: {.sourceClojure}
```clojure
(def p-sum-exceeding-8 (/ total-ways-exceeding-8 36))
```
:::


P(Sum > 8) = 10/36 = 0.2777778

**4. Calculate the probability of sum equals 10:**


::: {.sourceClojure}
```clojure
(def ways-sum-10 (count-ways 10))
```
:::



::: {.sourceClojure}
```clojure
(def p-sum-10 (/ ways-sum-10 36))
```
:::


P(Sum = 10) = 3/36 = 0.083333336

**5. Calculate the conditional probability:**


::: {.sourceClojure}
```clojure
(def p-sum-10-given-exceeding-8 (/ p-sum-10 p-sum-exceeding-8))
```
:::


**Answer:**


::: {.sourceClojure}
```clojure
(answer (str "P(Sum = 10 | Sum > 8) = " (float p-sum-10-given-exceeding-8)))
```
:::


> <span style="color: black; font-size: 1.5em;">**P(Sum = 10 | Sum > 8) = 0.3**</span>

**Verification:**

We can verify this result by calculating the probability directly from our counted ways:


::: {.sourceClojure}
```clojure
(def direct-probability (/ (count-ways 10) total-ways-exceeding-8))
```
:::



::: {.sourceClojure}
```clojure
(answer (str "Direct calculation: " (float direct-probability)))
```
:::


> <span style="color: black; font-size: 1.5em;">**Direct calculation: 0.3**</span>

**Interpretation:**

1. The probability of getting a sum of 10, given that the sum exceeds 8, is about 0.4.

2. This means that if we know the sum is greater than 8, there's a 40% chance it's exactly 10.

3. This probability is higher than the unconditional probability of getting a sum of 10 (which is about 0.0833 or 8.33%) because we've eliminated all the outcomes where the sum is 8 or less.

**Conclusion:**

We've successfully calculated the conditional probability using the definition of conditional probability: P(A|B) = P(A ∩ B) / P(B). This problem demonstrates how additional information (in this case, knowing the sum exceeds 8) can significantly change the probability of an event


```{=html}
<div style="background-color:grey;height:2px;width:100%;"></div>
```



```{=html}
<div><pre><small><small>source: <a href="https://github.com/adabwana/f24-m6410-hw2/blob/master/src/assignments/hw2/q9_10.clj">src/assignments/hw2/q9_10.clj</a></small></small></pre></div>
```
