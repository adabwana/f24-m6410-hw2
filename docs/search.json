[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Homework 2",
    "section": "",
    "text": "Jaryt Salvo\nDate: 9/18/24\nFall 2024 | MATH6410 Probability Theory\n\nThis project contains solutions to Homework 2 from the Probability Theory course (Math 6410) using Clojure. The code provided here demonstrates a functional programming approach to solving various probability problems, including discrete and continuous probability distributions, expected values, and variance calculations.\nThe code is organized into different sections corresponding to each homework problem, with detailed explanations of the logic and mathematical steps involved. By using Clojure and its associated libraries, such as scicloj.clay for rendering, tablecloth for data manipulation, and fastmath for mathematical operations, we provide a comprehensive solution set for the assigned problems.\n\nUtils\nThe utils.clj file contains various utility functions and helpers used throughout the homework solutions. It includes:\n\nFormatting functions for markdown and LaTeX rendering\nStatistical functions for probability distributions\nHelper functions for calculations and data manipulation\n\nThese utilities are designed to streamline the problem-solving process and provide reusable components for statistical computations.\nThe code in the src/assignments folder was rendered with Clay and deployed with Github Pages.\n\nsource: src/index.clj",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Jaryt Salvo</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.utils.html",
    "href": "assignments.hw2.utils.html",
    "title": "Utils",
    "section": "",
    "text": "(ns assignments.hw2.utils\n  (:require\n   [clojure.math.combinatorics :as combo]\n   [scicloj.kindly.v4.api :as kindly]\n   [scicloj.kindly.v4.kind :as kind]\n   (uncomplicate.neanderthal\n    [core :refer [mv]]\n    [linalg :refer [trf! tri!]]\n    [native :refer [dge dv]])))\n\n\n(kind/md \"## Utils\")\n\nP(A|B) (problem specific context)\n\n(defn p-a-gvn-b [target]\n  (let [A (dge 2 2 [1 0.5\n                    1 1] {:layout :row})                    ; 2x2 Matrix [[1 0.5] [1 -1]]\n        b (dv [target 1])                                   ; Vector [target 0]\n        LU (trf! A)                                         ; Perform LU decomposition\n        x (mv (tri! LU) b)]                                 ; Solve using forward/backward substitution\n    ; Return P(A|B)\n    (first x)))\n\n\n(let [target 0.75]\n  (p-a-gvn-b target))\n\n\n0.5\n\nHelper functions\n\n(defn joint-probability\n  \"Helper function to calculate the joint probability of a subset of events.\"\n  [probs subset]\n  (reduce * (map #(nth probs %) subset)))\n\n\n(let [probs [0.45 0.4 0.24] subset [0 1]]                   ; Male and glasses\n  (joint-probability probs subset))\n\n\n0.18000000000000002\n\n\n(defn subsets\n  \"Generate all non-empty subsets of a set of indices.\"\n  [s]\n  (filter seq (combo/subsets s)))\n\n\n(subsets (range 3))\n\n\n((0) (1) (2) (0 1) (0 2) (1 2) (0 1 2))\n\n\n(defn power-set\n  \"Returns the power set of a given collection (set or vector).\"\n  [coll]\n  (set (map set (combo/subsets (seq coll)))))\n\n\n(power-set (range 3))\n\n\n#{#{0 1} #{} #{0 1 2} #{2} #{1} #{1 2} #{0 2} #{0}}\n\n\n(defn probability-at-least-one\n  \"Calculate the probability of at least one event occurring given a collection of probabilities.\n     Uses the inclusion-exclusion principle for any number of events.\n     \n     Parameters:\n     probs - A collection of individual probabilities.\n     \n     Returns:\n     The probability of at least one event occurring.\"\n  [probs]\n  (let [p-none (reduce * (map #(- 1 %) probs))]\n    (- 1 p-none)))\n\n\n(comment\n  (defn probability-at-least-one-3\n    \"Calculate the probability of at least one event occurring given individual probabilities.\n   Correctly applies the inclusion-exclusion principle for three events.\n\n   Parameters:\n   p1 - Probability of the first event\n   p2 - Probability of the second event\n   p3 - Probability of the third event\n\n   Returns:\n   The probability of at least one event occurring.\"\n    [p1 p2 p3]\n    (+ (- (+ p1 p2 p3)\n          (+ (* p1 p2) (* p1 p3) (* p2 p3)))\n       (* p1 p2 p3)))\n\n  (let [p-male 0.45 p-glasses 0.4 p-senior 0.24]\n    (probability-at-least-one-3 p-male p-glasses p-senior))\n\n  ;; P([A1, ..., An])\n  ;; works with 3\n  (defn probability-at-least-one\n    \"Calculate the probability of at least one event occurring given a collection of probabilities.\n   Uses the inclusion-exclusion principle for any number of events.\n   \n   Parameters:\n   probs - A collection of individual probabilities.\n   \n   Returns:\n   The probability of at least one event occurring.\"\n    [probs]\n    (let [n (count probs)\n          indices (range n)\n          subset-indices (subsets indices)]\n      ;; Apply inclusion-exclusion\n      (reduce +\n              (map (fn [subset]\n                     (let [joint-prob (joint-probability probs subset)]\n                       ;; Alternate addition and subtraction based on the size of the subset\n                       (* (if (odd? (count subset)) 1 -1) joint-prob)))\n                   ;(filter seq subset-indices)\n                   subset-indices)))))\n\n\n(defn solve-probabilities [b1 b2]\n  (let [A (dge 2 2 [1 1\n                    3 -1]\n               {:layout :row})\n        b (dv [b1 b2])\n        LU (trf! A)\n        x (mv (tri! LU) b)]\n    x))\n\n\nNext, we’ll calculate Stirling numbers of the second kind:\n\n\n(defn stirlings2\n  \"Calculates Stirling number of the second kind S(n, k),\n   which is the number of ways to partition n items into k non-empty sets.\"\n  [n k]\n  (cond\n    (and (= n 0) (= k 0)) 1\n    (or (= k 0) (= n 0)) 0\n    :else (+ (* k (stirlings2 (dec n) k)) (stirlings2 (dec n) (dec k)))))\n\nLet’s examine some examples of Stirling numbers of the second kind:\nExample 1: S(3, 2) - Ways to partition 3 items into 2 non-empty sets\n\n(let [result (stirlings2 3 2)]\n  (kind/md (str \"S(3, 2) = \" result)))\n\nS(3, 2) = 3\nThis means there are 3 ways to partition 3 items into 2 non-empty sets: 1. {1, 2}, {3} 2. {1, 3}, {2} 3. {2, 3}, {1}\nExample 2: S(4, 2) - Ways to partition 4 items into 2 non-empty sets\n\n(let [result (stirlings2 4 2)]\n  (kind/md (str \"S(4, 2) = \" result)))\n\nS(4, 2) = 7\nThere are 7 ways to partition 4 items into 2 non-empty sets: 1. {1, 2, 3}, {4} 2. {1, 2, 4}, {3} 3. {1, 3, 4}, {2} 4. {2, 3, 4}, {1} 5. {1, 2}, {3, 4} 6. {1, 3}, {2, 4} 7. {1, 4}, {2, 3}\nExample 3: S(4, 3) - Ways to partition 4 items into 3 non-empty sets\n\n(let [result (stirlings2 4 3)]\n  (kind/md (str \"S(4, 3) = \" result)))\n\nS(4, 3) = 6\nThere are 6 ways to partition 4 items into 3 non-empty sets: 1. {1}, {2}, {3, 4} 2. {1}, {3}, {2, 4} 3. {1}, {4}, {2, 3} 4. {2}, {3}, {1, 4} 5. {2}, {4}, {1, 3} 6. {3}, {4}, {1, 2}\nThese examples demonstrate how Stirling numbers of the second kind represent the number of ways to partition a set of items into a specific number of non-empty subsets. This concept is crucial for our probability calculation, as it helps us count the number of ways to distribute calls across days.\n\nNow, we’ll implement the generalized inclusion-exclusion principle for distribution problems:\n\n\n(comment\n  (defn nck\n    \"Calculates the binomial coefficient (n choose k).\n   n: total number of items\n   k: number of items to choose\"\n    [n k]\n    (/ (reduce * (range 1 (inc n)))\n       (* (reduce * (range 1 (inc k)))\n          (reduce * (range 1 (inc (- n k))))))))\n\n\n(defn nck\n  \"Calculates the binomial coefficient (n choose k) using iterative and recusive method.\n n: total number of items\n k: number of items to choose\"\n  [n k]\n  (if (or (&lt; k 0) (&gt; k n))\n    0\n    (let [k (min k (- n k))]                                ; Take advantage of symmetry\n      (loop [result 1N, i 0]\n        (if (= i k)\n          result\n          (recur\n           (/ (* result (- n i)) (inc i))\n           (inc i)))))))\n\n\n(defn probability-distribution\n  \"Calculates the probability that all groups (of size `num-groups`) receive at least one item\n   when distributing `num-items` items randomly across the groups.\"\n  [num-items num-groups]\n  (let [total-ways (Math/pow num-groups num-items)          ;; Total number of ways to distribute items\n        ;; Sum of cases where at least one group gets no item\n        ways-without-full-distribution\n        (reduce +\n                (for [k (range 1 (inc num-groups))]         ;; Iterate over k groups being empty\n                  (* (nck num-groups k) (stirlings2 num-items (- num-groups k)))))]\n    ;; Calculate and return the probability\n    (- 1 (/ ways-without-full-distribution total-ways))))\n\n\nFinally, we’ll calculate the result for 12 calls and 7 days:\n\n\n(let [result (probability-distribution 12 7)]\n  (answer (str \"The probability of getting at least one call each day is approximately \" (format \"%.4f\" result))))\n\n\nThe probability of getting at least one call each day is approximately 0.9955\n\n\nsource: src/assignments/hw2/utils.clj",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Utils</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q1.html",
    "href": "assignments.hw2.q1.html",
    "title": "Question 1",
    "section": "",
    "text": "(ns assignments.hw2.q1\n  (:require\n    [assignments.hw2.utils :refer :all]\n    [scicloj.kindly.v4.kind :as kind]))\n\n\n\n1) Find \\(P(A ∩ B)\\) if \\(P(A) = 0.2\\), \\(P(B) = 0.4\\) and \\(P(A|B) + 0.5P(A^c|B) = 0.75\\).\nGiven:\n\\[P(A) = 0.2,    P(B) = 0.4,    P(A|B) + 0.5P(A^c|B) = 0.75\\]\n\nSolve P(A|B):\n\n\\[P(A|B) + 0.5(1 - P(A|B)) = 0.75\\]\n\\[P(A|B) + 0.5 - 0.5 P(A|B) = 0.75\\]\n\\[0.5 P(A|B) + 0.5 = 0.75\\]\n\\[0.5 P(A|B) = 0.25\\]\n\\[P(A|B) = 0.5\\]\n\nSolve P(A ∩ B):\n\n\\[P(A|B) = P(A ∩ B) / P(B)\\]\n\\[P(A ∩ B) = P(A|B) * P(B)\\]\n\\[P(A ∩ B) = 0.5 * 0.4 = 0.2\\]\nImplementation:\nWe’ll use linear algebra to solve the system of equations:\n\\[x + 0.5y = 0.75\\]\n\\[x + y = 1\\]\nWhere \\(x = P(A|B)\\) and \\(y = P(A^c|B)\\) and by definition \\(P(A|B) + P(A^c|B) = 1\\)\nThis system can be represented in matrix form as:\n\\[Ax = b\\]\nWhere:\n\\[A = \\begin{bmatrix} 1 & 0.5 \\\\ 1 & 1 \\end{bmatrix}\\]\n\\[x = \\begin{bmatrix} P(A|B) \\\\ P(A^c|B) \\end{bmatrix}\\]\n\\[b = \\begin{bmatrix} 0.75 \\\\ 1 \\end{bmatrix}\\]\nWe’ll solve this using LU decomposition and forward/backward substitution:\n\n(comment\n  (defn p-a-gvn-b [target]\n    (let [A (dge 2 2 [1 0.5                                 ; 2x2 Matrix [[1 0.5] [1 1]]\n                      1 1]\n                 {:layout :row})\n          b (dv [target 1])                                 ; Vector [target 1]\n          LU (trf! A)                                       ; Perform LU decomposition\n          x (mv (tri! LU) b)]                               ; Solve using forward/backward substitution\n      ; Return P(A|B)\n      (first x))))\n\n\n(let [target 0.75 p-a-given-b (p-a-gvn-b target)]\n  (kind/tex (str \"P(A|B) = \" p-a-given-b)))\n\n\\[P(A|B) = 0.5\\]\nAnswer:\n\n(let [p-a 0.2 p-b 0.4\n      p-a-given-b (p-a-gvn-b 0.75)\n      p-a-and-b (* p-a-given-b p-b)]\n  (answer (str \"P(A ∩ B) = \" p-a-and-b)))\n\n\nP(A ∩ B) = 0.2\n\nInterpretation:\n\nWhen the target is 0.75, we get \\(P(A|B) = 0.5\\).\nThe sum \\(P(A|B) + P(A^c|B) = 1\\) holds true.\nThe given equation \\(P(A|B) + 0.5 P(A^c|B) = 0.75\\) is satisfied with the calculated probabilities.\n\nImplications for Probability:\n\n\\(P(A|B)\\) represents the probability of event A occurring given that B has occurred.\n\\(P(A^c|B) = 1 - P(A|B)\\) is the probability that A does not occur given that B has occurred.\nThe equation \\(P(A|B) + 0.5 P(A^c|B) = 0.75\\) combines these conditional probabilities into a weighted sum.\n\nLimitations:\n\nThe target value must be between 0.5 and 1 for the probabilities to make sense.\nThis method assumes that all events and probabilities are valid within the context of probability theory.\n\nExplanation:\nWe solved for \\(P(A|B)\\) using the given equation and found it to be 0.5. Then, we calculated \\(P(A ∩ B)\\) using the formula \\(P(A ∩ B) = P(A|B) * P(B)\\).\nVerification:\n\nCheck the Given Equation:\n\n\\[P(A|B) + 0.5 P(A^c|B) = 0.5 + 0.5 * 0.5 = 0.75\\]\n\nCheck the Sum of Probabilities:\n\n\\[P(A|B) + P(A^c|B) = 0.5 + 0.5 = 1\\]\nNote on Implementation:\nWe used a simple linear system solver to find \\(P(A|B)\\). The linear algebra approach illustrates how systems of equations can be solved using matrices, even for basic probability problems.\nConclusion:\nThe solution correctly finds \\(P(A ∩ B) = 0.2\\) by first determining \\(P(A|B) = 0.5\\) and then applying the definition of conditional probability.\n\nsource: src/assignments/hw2/q1.clj",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Question 1</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q2.html",
    "href": "assignments.hw2.q2.html",
    "title": "Question 2",
    "section": "",
    "text": "(ns assignments.hw2.q2\n  (:require\n    [assignments.hw2.utils :refer :all]\n    [fastmath.core :as m]))\n\n\nConsider three types of students: male, wearing glasses, senior in a high school.\n\n2.1) If a principal claims that P(male)=0.45; P(glasses)=0.4; P(senior)=0.24, can that be a legitimate probability assignment? Explain\nTo determine if this is a legitimate probability assignment, we need to check if the sum of probabilities is less than or equal to 1.\n\n(let [p-male 0.45 p-glasses 0.4 p-senior 0.24\n      total-prob (+ p-male p-glasses p-senior)]\n  (answer\n    (str \"Sum of probabilities: \" (m/approx total-prob 2))))\n\n\nSum of probabilities: 1.09\n\nThis is not a legitimate probability assignment because:\n\nThese events (being male, wearing glasses, and being a senior) are not mutually exclusive. A student can belong to more than one category.\nFor non-mutually exclusive events, simply adding individual probabilities can result in a sum greater than 1, which is what we see here.\nThis sum exceeding 1 violates the rule of probability for mutually exclusive events.\n\n\n\n2.2) How to assign a probability to students in the high school so that the statement of the principal is valid?\nTo assign probabilities that make the principal’s statement valid, we need to consider the following:\n\nThe given probabilities are for individual characteristics, not mutually exclusive events.\nWe need to account for overlaps between these characteristics.\nWe can use the principle of inclusion-exclusion to calculate the probability of a student having at least one of these characteristics\n\n\n(comment\n  (defn probability-at-least-one\n    \"Calculate the probability of at least one event occurring using inclusion-exclusion. Assumes independence between events.\n    \n     Parameters:\n     probs - A collection of individual probabilities.\n     \n     Returns:\n     The probability of at least one event occurring.\"\n    [probs]\n    (let [p-none (reduce * (map #(- 1 %) probs))]\n      (- 1 p-none))))\n\n\n(let [p-male 0.45 p-glasses 0.4 p-senior 0.24\n      p-at-least-one (probability-at-least-one [p-male p-glasses p-senior])]\n  (answer\n    (str\n      \"P(male OR glasses OR senior) = \" (m/approx p-at-least-one 4) \";   &nbsp;\"\n      \"P(none of the characteristics) = \" (m/approx (- 1 p-at-least-one) 4))))\n\n\nP(male OR glasses OR senior) = 0.7492;  P(none of the characteristics) = 0.2508\n\nThis assignment is valid because:\n\nIt maintains the individual probabilities stated by the principal.\nIt accounts for potential overlaps between categories.\nThe total probability for all students (with and without these characteristics) equals 1.\n\nTo make the principal’s statement valid, we need to interpret these probabilities as the chance of a student having at least one of these characteristics. The probability that a student has none of these characteristics is the complement of the probability calculated above.\nNote: This calculation assumes independence between the characteristics, which may not reflect reality. In practice, there could be correlations between these traits that would require more detailed data to model accurately.\n\nsource: src/assignments/hw2/q2.clj",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Question 2</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q3.html",
    "href": "assignments.hw2.q3.html",
    "title": "Question 3",
    "section": "",
    "text": "(ns assignments.hw2.q3\n  (:require\n    [assignments.hw2.utils :refer :all]\n    [clojure.set :as set]\n    [fastmath.core :as m]))\n\n\n\n3) Find two sigma fields with probability assignments for the sample space Ω = {1, 2, 3}.\nA sigma field (also known as a sigma-algebra) is a collection of subsets of the sample space that satisfies certain properties. For Ω = {1, 2, 3}, we can define two different sigma fields:\nSigma Field 1: Trivial Sigma Field\nProbability assignment for the trivial sigma field:\nLet’s verify that these sigma fields satisfy the required properties:\n\n(defn verify-sigma-field [sigma-field]\n  (and\n    ; Contains empty set and entire sample space\n    (contains? sigma-field #{})\n    (contains? sigma-field #{1 2 3})\n    ; Closed under complementation\n    (every? #(contains? sigma-field (set/difference #{1 2 3} %)) sigma-field)\n    ; Closed under countable unions (for finite sets, this is equivalent to being closed under all unions)\n    (every? #(contains? sigma-field (apply set/union %))\n            (power-set sigma-field))))\n\n\n(let [trivial-sigma-field #{#{} #{1 2 3}}\n      verified? (verify-sigma-field trivial-sigma-field)]\n  (answer (str\n            \"Trivial sigma field is valid: \"\n            verified?)))\n\n\nTrivial sigma field is valid: true\n\nLet’s also verify that the probability assignments are valid:\n\n(defn verify-prob-assign [prob-assignment sample-space]\n  (let [power-set (power-set sample-space)\n        singleton-events (set (map #(set [%]) sample-space))\n        singleton-probs (map #(get prob-assignment % 0.0) singleton-events)\n        includes-singletons? (some #(contains? prob-assignment %) singleton-events)]\n    (and\n      ; All probabilities are between 0 and 1\n      (every? #(&lt;= 0 % 1) (vals prob-assignment))\n      ; All sets in the probability assignment are in the power set\n      (every? #(contains? power-set %) (keys prob-assignment))\n      ; Probability of the empty set is 0\n      (m/approx-eq 0.0 (get prob-assignment #{} 0.0))\n      ; Probability of the entire sample space is 1\n      (m/approx-eq 1.0 (get prob-assignment sample-space))\n      ; If singleton events are included, sum of their probabilities equals 1\n      (or (not includes-singletons?)\n          (m/approx-eq 1.0 (reduce + singleton-probs))))))\n\nProbability assignment verification results:\n\n(let [sample-space #{1 2 3}\n      trivial-probs {#{}      0.0\n                     #{1 2 3} 1.0}\n      verified? (verify-prob-assign trivial-probs sample-space)]\n  (answer (str\n            \"Trivial sigma field probability assignment is valid: \"\n            verified?)))\n\n\nTrivial sigma field probability assignment is valid: true\n\nSigma Field 2: Power Set\n\n(comment\n  (defn power-set\n    \"Returns the power set of a given collection (set or vector).\"\n    [coll]\n    (set (map set (combo/subsets (seq coll))))))\n\n\n(def power-set-sigma-field\n  (power-set #{1 2 3}))\n\nProbability assignment for the power set sigma field (example):\n\n(let [verified? (verify-sigma-field power-set-sigma-field)]\n  (answer (str\n            \"Power set sigma field is valid: \"\n            verified?)))\n\n\nPower set sigma field is valid: true\n\n\n(let [sample-space #{1 2 3}\n      power-set-probs\n      {#{}      0.0\n       #{1}     0.3\n       #{2}     0.3\n       #{3}     0.4\n       #{1 2}   0.6\n       #{1 3}   0.7\n       #{2 3}   0.7\n       #{1 2 3} 1.0}\n      verified? (verify-prob-assign power-set-probs sample-space)]\n  (answer (str\n            \"Power set sigma field probability assignment is valid: \"\n            verified?)))\n\n\nPower set sigma field probability assignment is valid: true\n\nThese sigma fields and their respective probability assignments satisfy the required properties of sigma fields and probability measures\nThe trivial sigma field satisfies the properties because: 1. It contains the empty set and the entire sample space. 2. The complement of the empty set is the entire sample space, and vice versa. 3. Any union of these sets is either the empty set or the entire sample space.\nThe power set sigma field satisfies the properties because: 1. It contains all possible subsets of the sample space, including the empty set and the entire sample space. 2. For any set in the power set, its complement is also in the power set. 3. Any union of sets in the power set is also in the power set.\n\nsource: src/assignments/hw2/q3.clj",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Question 3</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q4.html",
    "href": "assignments.hw2.q4.html",
    "title": "Question 4",
    "section": "",
    "text": "(ns assignments.hw2.q4\n  (:require\n    [assignments.hw2.utils :refer :all]\n    [fastmath.core :as m]))\n\n\n\n4.1) If P(A|B) &lt; P(A), show that P(B|A) &lt; P(B).\nTo prove this, we’ll use the definition of conditional probability and algebraic manipulation:\n\\[P(A|B) = P(A ∩ B) / P(B)\\]\n\\[P(B|A) = P(A ∩ B) / P(A)\\]\nGiven: \\(P(A|B) &lt; P(A)\\)\nStep 1: Express the inequality using the definition of conditional probability\n\\[P(A ∩ B) / P(B) &lt; P(A)\\]\nStep 2: Multiply both sides by \\(P(B)\\)\n\\[P(A ∩ B) &lt; P(A) * P(B)\\]\nStep 3: Divide both sides by \\(P(A)\\)\n\\[P(A ∩ B) / P(A) &lt; P(B)\\]\nStep 4: Recognize the left side as \\(P(B|A)\\)\n\\[P(B|A) &lt; P(B)\\]\n\n(answer\n  \"Thus, we have shown that if $P(A|B) &lt; P(A)$, then $P(B|A) &lt; P(B)$.\")\n\n\nThus, we have shown that if \\(P(A|B) &lt; P(A)\\), then \\(P(B|A) &lt; P(B)\\).\n\n\n\n4.2) If A and B are mutually exclusive, find P(A|B). If A and B are independent, find P(A|B).\nCase 1: A and B are mutually exclusive\nMutually exclusive events have no overlap, meaning \\(A ∩ B = ∅\\)\n\\[P(A|B) = P(A ∩ B) / P(B) = 0 / P(B) = 0\\]\nCase 2: A and B are independent\nFor independent events, \\(P(A ∩ B) = P(A) * P(B)\\)\n\\[P(A|B) = P(A ∩ B) / P(B) = (P(A) * P(B)) / P(B) = P(A)\\]\n\n(answer \"If A and B are mutually exclusive: $P(A|B) = 0$\")\n\n\nIf A and B are mutually exclusive: \\(P(A|B) = 0\\)\n\n\n(answer \"If A and B are independent: $P(A|B) = P(A)$\")\n\n\nIf A and B are independent: \\(P(A|B) = P(A)\\)\n\nImplementation:\n\n(defn demonstrate-conditional-probability-inequality [p-a p-b p-a-and-b]\n  (let [p-a-given-b (/ p-a-and-b p-b)\n        p-b-given-a (/ p-a-and-b p-a)]\n    (md (str \"Given:\"))\n    (md (str \"P(A) = \" p-a))\n    (md (str \"P(B) = \" p-b))\n    (md (str \"P(A ∩ B) = \" p-a-and-b))\n    (md (str \"P(A|B) = \" (m/approx p-a-given-b 4)))\n    (md (str \"P(B|A) = \" (m/approx p-b-given-a 4)))\n    (md (str \"P(A|B) &lt; P(A): \" (&lt; p-a-given-b p-a)))\n    (md (str \"P(B|A) &lt; P(B): \" (&lt; p-b-given-a p-b)))))\n\nDemonstration of the proof:\nP(B|A) &lt; P(B): true\nIn this example:\n\nP(A) = 0.5\nP(B) = 0.4\nP(A ∩ B) = 0.1\nP(A|B) = P(A ∩ B) / P(B) = 0.1 / 0.4 = 0.25\n\nSince P(A|B) = 0.25 &lt; P(A) = 0.5, this example satisfies the condition P(A|B) &lt; P(A).\n\n(defn conditional-probability [p-a p-b intersection type]\n  (case type\n    :mutually-exclusive 0\n    :independent p-a\n    (/ intersection p-b)))\n\nDemonstration for mutually exclusive events:\n\n(let [p-a 0.3 p-b 0.4]\n  (answer (str \"P(A|B) for mutually exclusive events: \"\n               (conditional-probability p-a p-b 0 :mutually-exclusive))))\n\n\nP(A|B) for mutually exclusive events: 0\n\nDemonstration for independent events:\n\n(let [p-a 0.3 p-b 0.4]\n  (answer (str \"P(A|B) for independent events: \"\n               (conditional-probability p-a p-b (* p-a p-b) :independent))))\n\n\nP(A|B) for independent events: 0.3\n\nConclusion:\nWe have demonstrated both algebraically and numerically that: 1. If P(A|B) &lt; P(A), then P(B|A) &lt; P(B). 2. For mutually exclusive events, P(A|B) = 0. 3. For independent events, P(A|B) = P(A).\nThese results are fundamental in understanding the relationships between events in probability theory.\n\nsource: src/assignments/hw2/q4.clj",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Question 4</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q5_6.html",
    "href": "assignments.hw2.q5_6.html",
    "title": "Question 5 to 6",
    "section": "",
    "text": "Question 5",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Question 5 to 6</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q5_6.html#question-5",
    "href": "assignments.hw2.q5_6.html#question-5",
    "title": "Question 5 to 6",
    "section": "",
    "text": "5) Let A and B be two events such that \\(P((A ∪ B)^c) = 0.6\\) and \\(P(A ∩ B) = 0.1\\). Let E be the event that either A or B but not both occurs. Find \\(P(E|A ∪ B)\\).\nThis problem invites us to explore the intricacies of set theory and conditional probability. Let’s break it down step-by-step, much like we would approach a complex sociocultural phenomenon.\nFirst, let’s define our events and their known probabilities:\n\\[P((A ∪ B)^c) = 0.6\\]\n\\[P(A ∩ B) = 0.1\\]\nNow, let’s calculate \\(P(A ∪ B)\\) using the complement rule:\n\\[P(A ∪ B) = 1 - P((A ∪ B)^c) = 1 - 0.6 = 0.4\\]\nEvent (E) is defined as (A ∪ B) setminus (A ∩ B), which is the symmetric difference or XOR of A and B.\nWe can calculate \\(P(E)\\) as follows:\n\\[P(E) = P(A ∪ B) - P(A ∩ B) = 0.4 - 0.1 = 0.3\\]\nNow, to find (P(E|A ∪ B)), we use the definition of conditional probability:\n\\[P(E|A ∪ B) = \\frac{P(E ∩ (A ∪ B))}{P(A ∪ B)}\\]\nSince \\(E | A ∪ B\\), we have \\(P(E ∩ (A ∪ B)) = P(E)\\).\n\\[P(E|A ∪ B) = \\frac{P(E)}{P(A ∪ B)} = \\frac{0.3}{0.4} = 0.75\\]\nNote: E is a subset of A ∪ B because E represents the elements that are in A or B but not both, which is necessarily a subset of all elements in A or B.\n\n(defn calculate-conditional-probability\n  [p-a-union-b-complement p-a-intersect-b]\n  (let [p-a-union-b (- 1 p-a-union-b-complement)\n        p-e (- p-a-union-b p-a-intersect-b)\n        p-e-given-a-union-b (/ p-e p-a-union-b)]\n    p-e-given-a-union-b))\n\n\n(let [result (calculate-conditional-probability 0.6 0.1)]\n  (answer (str \"$P(E|A ∪ B) = \" (m/approx result 4) \"$\")))\n\n\n\\(P(E|A ∪ B) = 0.75\\)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Question 5 to 6</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q5_6.html#question-6",
    "href": "assignments.hw2.q5_6.html#question-6",
    "title": "Question 5 to 6",
    "section": "Question 6",
    "text": "Question 6\n\n\n6) Let A and B be two events on a sample space S. Suppose that \\(P(A) = 0.4\\), \\(P(B) = 0.5\\), and \\(P(A ∩ B) = 0.1\\). What is the probability that A or B but not both occur?\nThis problem is asking for the probability of the symmetric difference of events A and B, also known as the exclusive OR (XOR) of A and B. Let’s approach this step-by-step.\nGiven:\n\\[P(A) = 0.4\\]\n\\[P(B) = 0.5\\]\n\\[P(A ∩ B) = 0.1\\]\nThe probability that A or B but not both occur can be calculated as:\n\\[P(A △ B) = P(A ∪ B) - P(A ∩ B)\\]\nFirst, let’s calculate P(A ∪ B) using the addition rule of probability:\n\\[P(A ∪ B) = P(A) + P(B) - P(A ∩ B)\\]\n\\[P(A ∪ B) = 0.4 + 0.5 - 0.1 = 0.8\\]\nNow we can calculate the probability of A or B but not both:\n\\[P(A △ B) = P(A ∪ B) - P(A ∩ B) = 0.8 - 0.1 = 0.7\\]\n\n(defn calculate-symmetric-difference\n  [p-a p-b p-a-intersect-b]\n  (let [p-a-union-b (+ p-a p-b (- p-a-intersect-b))\n        p-symmetric-difference (- p-a-union-b p-a-intersect-b)]\n    p-symmetric-difference))\n\n\n(let [result (calculate-symmetric-difference 0.4 0.5 0.1)]\n  (answer (str \"The probability that A or B but not both occur is \" (m/approx result 4))))\n\n\nThe probability that A or B but not both occur is 0.7\n\n\nsource: src/assignments/hw2/q5_6.clj",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Question 5 to 6</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q7_8.html",
    "href": "assignments.hw2.q7_8.html",
    "title": "Question 7 to 8",
    "section": "",
    "text": "Question 7",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Question 7 to 8</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q7_8.html#question-7",
    "href": "assignments.hw2.q7_8.html#question-7",
    "title": "Question 7 to 8",
    "section": "",
    "text": "7) Suppose that three fair dice are tossed. Let \\(A_i\\) be the event that a 6 shows on the \\(i^{th}\\) die, i = 1, 2, 3. Does \\(P(A_1 ∪ A_2 ∪ A_3) = 1/2\\)? Explain.\nTo solve this problem, we’ll use the following approach:\nStep 1: Probability of getting a 6 on a single die\n\\[P(A_i) = 1/6\\]\nStep 2: Probability of not getting a 6 on a single die\n\\[P(A_i^c) = 1 - P(A_i) = 5/6\\]\nStep 3: Probability of getting at least one 6 in three tosses, using the complement rule\n\\[P(A_1 ∪ A_2 ∪ A_3) = 1 - P(A_1^c ∩ A_2^c ∩ A_3^c)\\]\n\\[P(A_1 ∪ A_2 ∪ A_3) = 1 - (5/6)^3\\]\n\n(defn probability-at-least-one-six [num-dice]\n  (- 1 (m/pow (/ 5 6) num-dice)))\n\n\n(let [result (probability-at-least-one-six 3)]\n  (answer (str \"$P(A_1 ∪ A_2 ∪ A_3) = \"\n               (m/approx result 4)\n               \"$\")))\n\n\n\\(P(A_1 ∪ A_2 ∪ A_3) = 0.4213\\)\n\nStep 4: Compare the result with 1/2\nThe difference between the calculated probability and 1/2 is -0.0787\n\n(answer \"No, P(A_1 ∪ A_2 ∪ A_3) ≠ 1/2. The probability is slightly less than 1/2.\")\n\n\nNo, P(A_1 ∪ A_2 ∪ A_3) ≠ 1/2. The probability is slightly less than 1/2.\n\nExplanation: The probability of getting at least one 6 when tossing three fair dice is approximately 0.4213, which is not equal to 1/2 (0.5). The difference is about 0.0787 or 7.87%.\nThis result can be interpreted as follows:\n\nThe probability of getting at least one 6 in three tosses is higher than one might intuitively expect.\nIt’s more likely to get at least one 6 than to get no 6s at all in three tosses.\nThe probability is closer to 1/2 than it is to either 0 or 1, which might explain why someone might guess it to be exactly 1/2.\n\nThe probability is slightly less than 1/2 because:\n\nThe chance of getting at least one 6 increases with each additional die roll.\nHowever, the increase is not linear, and it gets smaller with each additional die.\nWith three dice, we’re just short of the 50% mark, but adding more dice would eventually bring us closer to (but never exactly) 100%.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Question 7 to 8</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q7_8.html#question-8",
    "href": "assignments.hw2.q7_8.html#question-8",
    "title": "Question 7 to 8",
    "section": "Question 8",
    "text": "Question 8\n\n\n8) A box contains 3 red balls and 2 white balls. Two balls are drawn at random without replacement. Let A be the event that the first ball drawn is red, and B the event that the second ball drawn is red. Are A and B independent? Explain.\nTo determine if events A and B are independent, we need to check if P(A ∩ B) = P(A) * P(B). Let’s calculate these probabilities:\nStep 1: Calculate P(A)\n\\[P(A) = 3/5\\]\nStep 2: Calculate P(B)\n\\[P(B) = (2/4) * (3/5) + (3/4) * (2/5) = 3/5\\]\nStep 3: Calculate P(A ∩ B)\n\\[P(A ∩ B) = (3/5) * (2/4) = 3/10\\]\nStep 4: Check if P(A ∩ B) = P(A) * P(B)\n\\[P(A) * P(B) = (3/5) * (3/5) = 9/25\\]\n\n(defn are-events-independent? [p-a p-b p-a-and-b]\n  (m/approx-eq p-a-and-b (* p-a p-b)))\n\n\n(let [p-a (/ 3 5)\n      p-b (/ 3 5)\n      p-a-and-b (/ 3 10)\n      independent? (are-events-independent? p-a p-b p-a-and-b)]\n  (answer (str \"A and B are \"\n               (if independent? \"\" \"not \")\n               \"independent.\")))\n\n\nA and B are not independent.\n\nExplanation:\n\n\\(P(A)\\): The probability that the first ball is red is \\(3/5\\).\n\\(P(B)\\): The probability that the second ball is red is also \\(3/5\\).\n\\(P(A ∩ B)\\): The probability that both balls are red is \\(3/10\\).\nSince \\(P(A ∩ B) = 3/10\\) and \\(P(A) * P(B) = 9/25\\), and these are not equal, events \\(A\\) and \\(B\\) are not independent.\n\nConclusion:\n\nThe outcome of the first draw affects the probability of the second draw.\nTherefore, events \\(A\\) and \\(B\\) are dependent.\n\n\nsource: src/assignments/hw2/q7_8.clj",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Question 7 to 8</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q9_10.html",
    "href": "assignments.hw2.q9_10.html",
    "title": "Question 9 to 10",
    "section": "",
    "text": "Question 9",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Question 9 to 10</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q9_10.html#question-9",
    "href": "assignments.hw2.q9_10.html#question-9",
    "title": "Question 9 to 10",
    "section": "",
    "text": "9) Events \\(A1\\) and \\(A2\\) are such that \\(A1 ∪ A2 = S\\) (the sample space), and \\(A1 ∩ A2 = ∅\\) (the empty set). Find \\(p1\\) if \\(P(A1) = p1\\) , \\(P(A2) = p2\\), and \\(3p_1 − p_2 = 0.5\\).\nGiven:\n\\[A1 ∪ A2 = S\\]\n\\[A1 ∩ A2 = ∅\\]\n\\[P(A1) = p1\\]\n\\[P(A2) = p_2\\]\n\\[3p_1 − p_2 = 0.5\\]\nSteps:\n\nSince A1 and A2 are mutually exclusive and cover the entire sample space:\n\n\\[P(A1) + P(A2) = 1\\]\n\\[p_1 + p_2 = 1\\]\n\nWe now have a system of two equations:\n\n\\[p_1 + p_2 = 1\\]\n\\[3p_1 - p_2 = 0.5\\]\n\nWe can solve this system using linear algebra:\n\n\\[A = \\begin{bmatrix} 1 & 1 \\\\ 3 & -1 \\end{bmatrix}\\]\n\\[x = \\begin{bmatrix} p1 \\\\ p2 \\end{bmatrix}\\]\n\\[b = \\begin{bmatrix} 1 \\\\ 0.5 \\end{bmatrix}\\]\nWe’ll solve this using LU decomposition and forward/backward substitution. Similar to Question 1:\n\n(comment\n  (defn solve-probabilities [b1 b2]\n    (let [A (dge 2 2 [1 1\n                      3 -1]\n                 {:layout :row})\n          b (dv [b1 b2])\n          LU (trf! A)\n          x (mv (tri! LU) b)]\n      x)))\n\n\n(let [solution (solve-probabilities 1 0.5)\n      p1 (first solution)\n      p2 (second solution)]\n  (str [(str \"p1 = \" p1)\n        (str \"p2 = \" p2)]))\n\n\n\"[\\\"p1 = 0.375\\\" \\\"p2 = 0.625\\\"]\"\n\nAnswer:\n\n(let [solution (solve-probabilities 1 0.5)\n      p1 (first solution)]\n  (answer (str \"p1 = \" p1)))\n\n\np1 = 0.375\n\nVerification:\nLet’s verify our solution satisfies both equations:\n\n(let [solution (solve-probabilities 1 0.5)\n      p1 (first solution)\n      p2 (second solution)]\n  (answer (str \"p1 + p2 = \" (+ p1 p2)\n               \",   \\n\"\n               \"3p1 - p2 = \" (- (* 3 p1) p2))))\n\n\np1 + p2 = 1.0,\n3p1 - p2 = 0.5\n\nInterpretation: 1. \\(p_1\\) represents the probability of event \\(A1\\) occurring. 2. \\(p_2\\) represents the probability of event \\(A2\\) occurring. 3. The sum of \\(p_1\\) and \\(p_2\\) equals 1, confirming that \\(A1\\) and \\(A2\\) cover the entire sample space. 4. The equation \\(3p_1 - p_2 = 0.5\\) is satisfied by our solution.\nConclusion: We have successfully found \\(p_1\\), which satisfies all the given conditions. This solution demonstrates how mutually exclusive events that cover the entire sample space relate to each other probabilistically.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Question 9 to 10</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.q9_10.html#question-10",
    "href": "assignments.hw2.q9_10.html#question-10",
    "title": "Question 9 to 10",
    "section": "Question 10",
    "text": "Question 10\n\n\n10) Suppose that two fair dice are tossed. What is the probability that the sum equals ten given that it exceeds eight?\nGiven:\n\nTwo fair dice are tossed\nWe need to find \\(P(Sum = 10 | Sum &gt; 8)\\)\n\nSteps:\n1. Sample space for sums exceeding 8:\n\n(def sums-exceeding-8 [9 10 11 12])\n\n2. Count the number of ways to get each sum:\n\n(defn count-ways [sum]\n  (count (for [d1 (range 1 7)\n               d2 (range 1 7)\n               :when (= (+ d1 d2) sum)]\n           [d1 d2])))\n\n\n(let [sums (range 2 13)\n      frequencies (map count-ways sums)\n      data (tc/dataset {:sum       sums\n                        :frequency frequencies})]\n  (haclo/layer-bar data\n                   {:=x :sum :=x-title \"Sum of Dice\" :=mark-size 25\n                    :=y :frequency :=y-title \"Frequency\"}))\n\n\n\n(def ways-for-sums\n  (map #(vector % (count-ways %)) sums-exceeding-8))\n\nNumber of ways for each sum:\n\n(into [] (map (fn [[sum ways]]\n                {:sum sum :ways ways}) ways-for-sums))\n\n\n[{:sum 9, :ways 4}\n {:sum 10, :ways 3}\n {:sum 11, :ways 2}\n {:sum 12, :ways 1}]\n\n3. Calculate the probability of sum exceeding 8:\n\n(def total-ways-exceeding-8 (reduce + (map second ways-for-sums)))\n\n\n(def p-sum-exceeding-8 (/ total-ways-exceeding-8 36))\n\nP(Sum &gt; 8) = 10/36 = 0.2777778\n4. Calculate the probability of sum equals 10:\n\n(def ways-sum-10 (count-ways 10))\n\n\n(def p-sum-10 (/ ways-sum-10 36))\n\nP(Sum = 10) = 3/36 = 0.083333336\n5. Calculate the conditional probability:\n\n(def p-sum-10-given-exceeding-8 (/ p-sum-10 p-sum-exceeding-8))\n\nAnswer:\n\n(answer (str \"P(Sum = 10 | Sum &gt; 8) = \" (float p-sum-10-given-exceeding-8)))\n\n\nP(Sum = 10 | Sum &gt; 8) = 0.3\n\nVerification:\nWe can verify this result by calculating the probability directly from our counted ways:\n\n(def direct-probability (/ (count-ways 10) total-ways-exceeding-8))\n\n\n(answer (str \"Direct calculation: \" (float direct-probability)))\n\n\nDirect calculation: 0.3\n\nInterpretation:\n\nThe probability of getting a sum of 10, given that the sum exceeds 8, is about 0.4.\nThis means that if we know the sum is greater than 8, there’s a 40% chance it’s exactly 10.\nThis probability is higher than the unconditional probability of getting a sum of 10 (which is about 0.0833 or 8.33%) because we’ve eliminated all the outcomes where the sum is 8 or less.\n\nConclusion:\nWe’ve successfully calculated the conditional probability using the definition of conditional probability: P(A|B) = P(A ∩ B) / P(B). This problem demonstrates how additional information (in this case, knowing the sum exceeds 8) can significantly change the probability of an event\n\nsource: src/assignments/hw2/q9_10.clj",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Question 9 to 10</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.cw6_q5.html",
    "href": "assignments.hw2.cw6_q5.html",
    "title": "EXTRA: CW6 Q5",
    "section": "",
    "text": "(ns assignments.hw2.cw6-q5\n  (:require\n    [assignments.hw2.utils :refer :all]\n    [scicloj.kindly.v4.kind :as kind]))\n\n\n\n5) Your phone rings 12 times each week, the calls being randomly distributed among 7 days. What is the probability that you get at least one call each day?\nThis problem is equivalent to the Coupon collector’s problem, as described in the MathStackExchange answer. It can be thought of as ‘the probability that a random 12-letter word written with a 7-letter alphabet contains all 7 letters.’\n1. Calculate the binomial coefficient (n choose k):\n\n(comment\n  (defn nck\n    \"Calculates the binomial coefficient (n choose k) using iterative and recusive method.\n   n: total number of items\n   k: number of items to choose\"\n    [n k]\n    (if (or (&lt; k 0) (&gt; k n))\n      0\n      (let [k (min k (- n k))]                              ; Take advantage of symmetry\n        (loop [result 1N, i 0]\n          (if (= i k)\n            result\n            (recur\n              (/ (* result (- n i)) (inc i))\n              (inc i))))))))\n\n2. Calculate the inclusion-exclusion terms:\n\n(defn calculate-inclusion-exclusion-terms\n  \"Calculates the terms for the inclusion-exclusion principle, corresponding to the formula:\n   7^12 - (7c6)6^12 + (7c5)5^12 - (7c4)4^12 + (7c3)3^12 - (7c2)2^12 + (7c1)1^12\n   \n   num-items: Number of items to distribute (e.g., calls)\n   num-groups: Number of groups to distribute into (e.g., days)\n   \n   Returns a sequence of terms for the inclusion-exclusion sum.\"\n  [num-items num-groups]\n  (map (fn [k]\n         (let [sign (if (odd? k) 1 -1)\n               combinations (nck num-groups k)              ; This computes (7 choose k)\n               ways (Math/pow (- num-groups k) num-items)]  ; This computes (7-k)^12\n           (* sign combinations ways)))\n       (range 1 (inc num-groups))))\n\nExplanation of calculate-inclusion-exclusion-terms:\n\nWe iterate over k from 1 to num-groups, representing the number of groups not receiving any item.\nFor each k, we calculate:\n\n(nck num-groups k): The number of ways to choose k groups out of num-groups.\n(Math/pow (- num-groups k) num-items): The number of ways to distribute num-items to the remaining (num-groups - k) groups.\n(if (odd? k) 1 -1): Alternating sign for the inclusion-exclusion principle.\n\nThe product of these three factors gives us each term in the inclusion-exclusion sum.\n\nExamples of calculate-inclusion-exclusion-terms:\nExample 1: 3 items, 2 groups\n\n(let [terms (calculate-inclusion-exclusion-terms 3 2)]\n  (kind/md (str \"Terms: \" (vec terms))))\n\nTerms: [2.0 -0.0]\nExplanation: - For k=1: (2 choose 1) * 1^3 * 1 = 2 - For k=2: (2 choose 2) * 0^3 * -1 = 0\nThese terms correspond to the inclusion-exclusion principle as described in the MathStackExchange solution. Here, we’re calculating the probability of not using all groups (days/letters), which we’ll later subtract from 1 to get the desired probability.\nExample 2: 4 items, 3 groups\n\n(let [terms (calculate-inclusion-exclusion-terms 4 3)]\n  (kind/md (str \"Terms: \" (vec terms))))\n\nTerms: [48.0 -3.0 0.0]\nExplanation:\n\nFor k=1: (3 choose 1) * 2^4 * 1 = 48\nFor k=2: (3 choose 2) * 1^4 * -1 = -3\nFor k=3: (3 choose 3) * 0^4 * 1 = 0\n\nThese terms directly relate to the MathStackExchange solution’s formula: \\(7^{12} - \\binom{7}{6}6^{12} + \\binom{7}{5}5^{12} - ... + \\binom{7}{1}1^{12}\\). In our function:\n\n(3 choose k) corresponds to \\(\\binom{7}{k}\\) in the solution\n\\((3-k)^4\\) corresponds to \\(k^{12}\\) in the solution (where k is the complement)\nThe alternating signs match the solution’s inclusion-exclusion principle\n\nOur function generalizes this approach for any number of items (calls/letters) and groups (days/alphabet letters).\n3. Calculate the probability using inclusion-exclusion:\n\n(defn coupon-probability\n  \"Calculates the probability that all `num-groups` (e.g., days) will be used\n   when distributing `num-items` (e.g., calls) using the inclusion-exclusion principle.\"\n  [num-items num-groups]\n  (let [terms (calculate-inclusion-exclusion-terms num-items num-groups)\n        total-ways (Math/pow num-groups num-items)\n        excluded-ways (reduce + terms)\n        probability (- 1 (/ excluded-ways total-ways))]\n    probability))\n\nExplanation of coupon-probability:\n\nWe calculate the inclusion-exclusion terms using our calculate-inclusion-exclusion-terms function.\ntotal-ways represents the total number of ways to distribute num-items among num-groups.\nWe sum up the terms and divide by total-ways to get the probability of not using all groups.\nFinally, we subtract this from 1 to get the probability of using all groups.\n\nExamples of coupon-probability:\nExample 1: 3 items, 2 groups\n\n(let [prob (coupon-probability 3 2)]\n  (kind/md (str \"Probability: \" (format \"%.4f\" prob))))\n\nProbability: 0.7500\nExplanation:\n\nTotal ways: \\(2^3 = 8\\)\nSum of terms: 2 (from previous example)\n\\(Probability = 1 - (2 / 8) = 0.75\\) This means there’s a 75% chance of using both groups having at least one item when distributing 3 items.\n\nExample 2: 4 items, 3 groups\n\n(let [prob (coupon-probability 4 3)]\n  (kind/md (str \"Probability: \" (format \"%.4f\" prob))))\n\nProbability: 0.4444\nExplanation:\n\nTotal ways: \\(3^4 = 81\\)\nSum of terms: \\(48 + -3 + 0 = 45\\) (from previous example)\n\\(Probability = 1 - (45 / 81) ≈ 0.4444\\) This means there’s about a 44.44% chance of using all 3 groups having at least one item when distributing 4 items.\n\nExample 3: 5 items, 5 groups\n\n(let [prob (coupon-probability 5 5)]\n  (kind/md (str \"Probability: \" (format \"%.4f\" prob))))\n\nProbability: 0.0384\nExplanation:\n\nTotal ways: \\(5^5 = 3125\\)\nSum of terms: \\(5 * 4^5 - 10 * 3^5 + 10 * 2^5 - 5 * 1^5 = 3005\\)\n\\(Probability = 1 - (3005 / 3125) ≈ 0.0384\\)\n\nThis means there’s about a 3.84% chance of using all 5 groups having at least one item when distributing 5 items.\nExample 4: 10 items, 3 groups\n\n(let [prob (coupon-probability 10 3)]\n  (kind/md (str \"Probability: \" (format \"%.4f\" prob))))\n\nProbability: 0.9480\nExplanation:\n\nTotal ways: \\(3^{10} = 59049\\)\nSum of terms: \\(3 * 2^{10} - 3 * 1^{10} = 3069\\)\n\\(Probability = 1 - (3069 / 59049) ≈ 0.9480\\)\n\nThis means there’s about a 94.80% chance of using all 3 groups having at least one item when distributing 10 items.\n4. Calculate the result for 12 calls and 7 days:\n\n(let [result (coupon-probability 12 7)]\n  (answer (str \"The probability of getting at least one call each day is approximately \"\n               (format \"%.4f\" result))))\n\n\nThe probability of getting at least one call each day is approximately 0.2285\n\n\nsource: src/assignments/hw2/cw6_q5.clj",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>EXTRA: CW6 Q5</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.cw6_intuition.html",
    "href": "assignments.hw2.cw6_intuition.html",
    "title": "EXTRA: CW6 Intuition",
    "section": "",
    "text": "Intuition Behind the Inclusion-Exclusion Formula\nThe inclusion-exclusion principle helps solve problems where overlapping cases exist. The intuition is that when trying to count events where certain outcomes are required (like ensuring every day gets at least one call), you start by counting all the possible outcomes and then systematically remove those where some outcomes violate your requirements. However, due to overlaps in what you remove, you must adjust by adding back those overlaps. This alternating process of subtracting and adding ensures that you don’t overcount or undercount any cases.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>EXTRA: CW6 Intuition</span>"
    ]
  },
  {
    "objectID": "assignments.hw2.cw6_intuition.html#example-distributing-12-calls-over-7-days",
    "href": "assignments.hw2.cw6_intuition.html#example-distributing-12-calls-over-7-days",
    "title": "EXTRA: CW6 Intuition",
    "section": "Example: Distributing 12 Calls Over 7 Days",
    "text": "Example: Distributing 12 Calls Over 7 Days\nLet’s break it down using the example of distributing 12 calls over 7 days and wanting to ensure each day gets at least one call.\n\nTotal Number of Distributions:\nIf we don’t care about how the calls are distributed, the total number of ways to assign 12 calls to 7 days is: \\(7^{12}\\)\nEach call has 7 possibilities, one for each day. This is the starting point — all possible ways to assign the calls, without any constraints.\n\n\nStep-by-Step Reasoning for Inclusion-Exclusion:\nThe issue is that many of these ways result in some days getting no calls. We want to exclude these cases, which leads to the inclusion-exclusion method.\n\nStep 1: Subtract the Cases Where Some Days Get No Calls\nWe start by subtracting the cases where at least one day gets no call. For example, if 6 days receive calls and 1 day doesn’t, the number of such distributions is: \\(\\binom{7}{6} * 6^{12}\\)\nHere:\n\n\\(\\binom{7}{6}\\): We choose 6 days to receive calls (1 day will not get any).\n\\(6^{12}\\): The calls are distributed among the 6 chosen days.\n\nWe subtract this number because these are cases where not all 7 days get calls, violating the requirement.\n\n\nStep 2: Add Back the Cases Where We Over-Subtracted\nWhen subtracting the cases where one day is left out, we may have over-subtracted cases where two or more days are left out. For example, if 5 days receive calls and 2 days get none, we’ve subtracted that case twice — once for each day being left out. So, we add it back: \\(\\binom{7}{5} * 5^{12}\\)\nHere:\n\n\\(\\binom{7}{5}\\): We choose 5 days to receive calls (2 days will not get any).\n\\(5^{12}\\): The calls are distributed among the 5 chosen days.\n\n\n\nStep 3: Continue Alternating\nThe process continues, alternating between subtraction and addition, for cases where 3, 4, and more days are left out. This ensures that overlaps are properly handled.\n\n\n\nFinal Formula:\nBy the time we’ve alternated through all the cases — subtracting and adding at each step — we’ve handled all possible overlaps. The formula we use looks like this:\n\\(7^{12} - \\binom{7}{6} * 6^{12} + \\binom{7}{5} * 5^{12} - \\binom{7}{4} * 4^{12} + \\dots + \\binom{7}{1} * 1^{12}\\)\n\n\nKey Intuition:\n\nFirst Subtract: You start by subtracting the cases where fewer than all days are used, which includes invalid cases.\nThen Add Back Overlaps: When multiple days are left out, they were subtracted too many times, so we need to add back those overlaps to avoid over-subtraction.\nKeep Alternating: This ensures that each case is counted the correct number of times — neither too many nor too few.\n\n\n\nVisual Example (Simplified):\nImagine distributing 5 calls to 3 days:\n\nTotal number of ways (without restrictions) = \\(3^5\\).\nNow subtract the cases where only 2 days get calls: \\(\\binom{3}{2} * 2^5\\).\nBut, cases where only 1 day gets calls were subtracted twice, so you add back \\(\\binom{3}{1} * 1^5\\).\n\nThis process of inclusion (adding back) and exclusion (subtracting) continues until all overlaps are handled correctly.\n\n\nWhy Inclusion-Exclusion Works:\nInclusion-exclusion ensures that:\n\nYou don’t overcount: You subtract cases where fewer days get calls.\nYou don’t undercount: You add back cases where multiple days are excluded simultaneously.\n\nBy systematically alternating between subtraction and addition, you can correctly count the number of ways to distribute items such that no group (or day) is left out.\nThis principle generalizes to any problem where overlapping subsets need to be considered. In this case, it helps calculate the probability of distributing calls to ensure each day gets at least one.\n\nsource: src/assignments/hw2/cw6_intuition.clj",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>EXTRA: CW6 Intuition</span>"
    ]
  }
]